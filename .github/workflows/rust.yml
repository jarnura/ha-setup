name: Rust

on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]

env:
  CARGO_TERM_COLOR: always
  CARGO_INCREMENTAL: 0
  CARGO_NET_RETRY: 2
  RUSTUP_MAX_RETRIES: 2
  RUST_BACKTRACE: short
  CARGO_REGISTRIES_CRATES_IO_PROTOCOL: sparse
  RUSTC_WRAPPER: "/home/runner/.cargo/bin/sccache"
  SCCACHE_DIR: ~/cache/sccache

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
    - name: Checkout repository
      uses: actions/checkout@v2

    - name: Set up Docker Buildx
      uses: docker/setup-buildx-action@v2

    - name: Cache Docker layers
      uses: actions/cache@v3
      with:
        path: |
          /tmp/.buildx-cache
           ~/.cache/sccache/
        key: ${{ runner.os }}-buildx-${{ github.sha }}
        restore-keys: |
          ${{ runner.os }}-buildx-

    - name: Set up QEMU
      uses: docker/setup-qemu-action@v2

    - uses: dtolnay/rust-toolchain@stable
    - uses: cargo-bins/cargo-binstall@main
    - run: cargo binstall -y sccache

#    - name: Set up Sccache
 #     uses: taiki-e/install-action@v2.33.28
  #    with:
   #     tool: sccache
    #    checksum: true
  
  #  - name: Cache sccache    
   #   uses: actions/cache@v2
    #  with:
     #   path: /sccache
      #  key: ${{ runner.os }}-sccache-${{ github.sha }}
       # restore-keys: |
        #  ${{ runner.os }}-sccache-

    - name: Build Docker image
      uses: docker/build-push-action@v4
      with:
        context: .
        build-args: |
          SCCACHE_DIR=${{ env.SCCACHE_DIR }}
          RUSTC_WRAPPER=${{ env.RUSTC_WRAPPER }}
        cache-from: type=local,src=/tmp/.buildx-cache
        cache-to: type=local,dest=/tmp/.buildx-cache
